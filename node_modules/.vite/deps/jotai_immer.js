import {
  fn
} from "./chunk-W32WTDFC.js";
import {
  atom,
  useAtom
} from "./chunk-XPACDKTZ.js";
import {
  require_react
} from "./chunk-V6FWWDGV.js";
import {
  __toESM
} from "./chunk-5CYG367S.js";

// node_modules/.pnpm/jotai@1.6.1_immer@9.0.12+react@18.0.0/node_modules/jotai/esm/immer.js
var import_react = __toESM(require_react());
function atomWithImmer(initialValue) {
  const anAtom = atom(initialValue, (get, set, fn2) => set(anAtom, fn(get(anAtom), typeof fn2 === "function" ? fn2 : () => fn2)));
  return anAtom;
}
function useImmerAtom(anAtom, scope) {
  const [state, setState] = useAtom(anAtom, scope);
  const setStateWithImmer = (0, import_react.useCallback)((fn2) => setState(fn((draft) => fn2(draft))), [setState]);
  return [state, setStateWithImmer];
}
var getWeakCacheItem = (cache, deps) => {
  do {
    const [dep, ...rest] = deps;
    const entry = cache.get(dep);
    if (!entry) {
      return;
    }
    if (!rest.length) {
      return entry[1];
    }
    cache = entry[0];
    deps = rest;
  } while (deps.length);
};
var setWeakCacheItem = (cache, deps, item) => {
  do {
    const [dep, ...rest] = deps;
    let entry = cache.get(dep);
    if (!entry) {
      entry = [/* @__PURE__ */ new WeakMap()];
      cache.set(dep, entry);
    }
    if (!rest.length) {
      entry[1] = item;
      return;
    }
    cache = entry[0];
    deps = rest;
  } while (deps.length);
};
var createMemoizeAtom = () => {
  const cache = /* @__PURE__ */ new WeakMap();
  const memoizeAtom2 = (createAtom, deps) => {
    const cachedAtom = getWeakCacheItem(cache, deps);
    if (cachedAtom) {
      return cachedAtom;
    }
    const createdAtom = createAtom();
    setWeakCacheItem(cache, deps, createdAtom);
    return createdAtom;
  };
  return memoizeAtom2;
};
var memoizeAtom = createMemoizeAtom();
function withImmer(anAtom) {
  return memoizeAtom(() => {
    const derivedAtom = atom((get) => get(anAtom), (get, set, fn2) => set(anAtom, fn(get(anAtom), typeof fn2 === "function" ? fn2 : () => fn2)));
    return derivedAtom;
  }, [anAtom]);
}
export {
  atomWithImmer,
  useImmerAtom,
  withImmer
};
//# sourceMappingURL=jotai_immer.js.map
