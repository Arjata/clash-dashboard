{
  "version": 3,
  "sources": ["../../.pnpm/jotai@1.6.1_immer@9.0.12+react@18.0.0/node_modules/jotai/esm/immer.js"],
  "sourcesContent": ["import { produce } from 'immer';\nimport { atom, useAtom } from 'jotai';\nimport { useCallback } from 'react';\n\nfunction atomWithImmer(initialValue) {\n  const anAtom = atom(initialValue, (get, set, fn) => set(anAtom, produce(get(anAtom), typeof fn === \"function\" ? fn : () => fn)));\n  return anAtom;\n}\n\nfunction useImmerAtom(anAtom, scope) {\n  const [state, setState] = useAtom(anAtom, scope);\n  const setStateWithImmer = useCallback((fn) => setState(produce((draft) => fn(draft))), [setState]);\n  return [state, setStateWithImmer];\n}\n\nconst getWeakCacheItem = (cache, deps) => {\n  do {\n    const [dep, ...rest] = deps;\n    const entry = cache.get(dep);\n    if (!entry) {\n      return;\n    }\n    if (!rest.length) {\n      return entry[1];\n    }\n    cache = entry[0];\n    deps = rest;\n  } while (deps.length);\n};\nconst setWeakCacheItem = (cache, deps, item) => {\n  do {\n    const [dep, ...rest] = deps;\n    let entry = cache.get(dep);\n    if (!entry) {\n      entry = [ new WeakMap()];\n      cache.set(dep, entry);\n    }\n    if (!rest.length) {\n      entry[1] = item;\n      return;\n    }\n    cache = entry[0];\n    deps = rest;\n  } while (deps.length);\n};\nconst createMemoizeAtom = () => {\n  const cache = /* @__PURE__ */ new WeakMap();\n  const memoizeAtom = (createAtom, deps) => {\n    const cachedAtom = getWeakCacheItem(cache, deps);\n    if (cachedAtom) {\n      return cachedAtom;\n    }\n    const createdAtom = createAtom();\n    setWeakCacheItem(cache, deps, createdAtom);\n    return createdAtom;\n  };\n  return memoizeAtom;\n};\n\nconst memoizeAtom = createMemoizeAtom();\nfunction withImmer(anAtom) {\n  return memoizeAtom(() => {\n    const derivedAtom = atom((get) => get(anAtom), (get, set, fn) => set(anAtom, produce(get(anAtom), typeof fn === \"function\" ? fn : () => fn)));\n    return derivedAtom;\n  }, [anAtom]);\n}\n\nexport { atomWithImmer, useImmerAtom, withImmer };\n"],
  "mappings": ";;;;;;;;;;;;;;;AAEA,mBAA4B;AAE5B,uBAAuB,cAAc;AACnC,QAAM,SAAS,KAAK,cAAc,CAAC,KAAK,KAAK,QAAO,IAAI,QAAQ,GAAQ,IAAI,MAAM,GAAG,OAAO,QAAO,aAAa,MAAK,MAAM,GAAE,CAAC,CAAC;AAC/H,SAAO;AACT;AAEA,sBAAsB,QAAQ,OAAO;AACnC,QAAM,CAAC,OAAO,YAAY,QAAQ,QAAQ,KAAK;AAC/C,QAAM,oBAAoB,8BAAY,CAAC,QAAO,SAAS,GAAQ,CAAC,UAAU,IAAG,KAAK,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC;AACjG,SAAO,CAAC,OAAO,iBAAiB;AAClC;AAEA,IAAM,mBAAmB,CAAC,OAAO,SAAS;AACxC,KAAG;AACD,UAAM,CAAC,QAAQ,QAAQ;AACvB,UAAM,QAAQ,MAAM,IAAI,GAAG;AAC3B,QAAI,CAAC,OAAO;AACV;AAAA,IACF;AACA,QAAI,CAAC,KAAK,QAAQ;AAChB,aAAO,MAAM;AAAA,IACf;AACA,YAAQ,MAAM;AACd,WAAO;AAAA,EACT,SAAS,KAAK;AAChB;AACA,IAAM,mBAAmB,CAAC,OAAO,MAAM,SAAS;AAC9C,KAAG;AACD,UAAM,CAAC,QAAQ,QAAQ;AACvB,QAAI,QAAQ,MAAM,IAAI,GAAG;AACzB,QAAI,CAAC,OAAO;AACV,cAAQ,CAAE,oBAAI,QAAQ,CAAC;AACvB,YAAM,IAAI,KAAK,KAAK;AAAA,IACtB;AACA,QAAI,CAAC,KAAK,QAAQ;AAChB,YAAM,KAAK;AACX;AAAA,IACF;AACA,YAAQ,MAAM;AACd,WAAO;AAAA,EACT,SAAS,KAAK;AAChB;AACA,IAAM,oBAAoB,MAAM;AAC9B,QAAM,QAAwB,oBAAI,QAAQ;AAC1C,QAAM,eAAc,CAAC,YAAY,SAAS;AACxC,UAAM,aAAa,iBAAiB,OAAO,IAAI;AAC/C,QAAI,YAAY;AACd,aAAO;AAAA,IACT;AACA,UAAM,cAAc,WAAW;AAC/B,qBAAiB,OAAO,MAAM,WAAW;AACzC,WAAO;AAAA,EACT;AACA,SAAO;AACT;AAEA,IAAM,cAAc,kBAAkB;AACtC,mBAAmB,QAAQ;AACzB,SAAO,YAAY,MAAM;AACvB,UAAM,cAAc,KAAK,CAAC,QAAQ,IAAI,MAAM,GAAG,CAAC,KAAK,KAAK,QAAO,IAAI,QAAQ,GAAQ,IAAI,MAAM,GAAG,OAAO,QAAO,aAAa,MAAK,MAAM,GAAE,CAAC,CAAC;AAC5I,WAAO;AAAA,EACT,GAAG,CAAC,MAAM,CAAC;AACb;",
  "names": []
}
