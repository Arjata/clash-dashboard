{
  "version": 3,
  "sources": ["../../.pnpm/jotai@1.6.1_immer@9.0.12+react@18.0.0/node_modules/jotai/esm/utils.js"],
  "sourcesContent": ["import { atom, SECRET_INTERNAL_getScopeContext, useAtom, useSetAtom } from 'jotai';\nexport { useAtomValue, useSetAtom as useUpdateAtom } from 'jotai';\nimport { useContext, useCallback, useMemo } from 'react';\n\nconst RESET = Symbol();\n\nfunction atomWithReset(initialValue) {\n  const anAtom = atom(initialValue, (get, set, update) => {\n    if (update === RESET) {\n      set(anAtom, initialValue);\n    } else {\n      set(anAtom, typeof update === \"function\" ? update(get(anAtom)) : update);\n    }\n  });\n  return anAtom;\n}\n\nconst WRITE_ATOM = \"w\";\nconst RESTORE_ATOMS = \"h\";\n\nfunction useResetAtom(anAtom, scope) {\n  const ScopeContext = SECRET_INTERNAL_getScopeContext(scope);\n  const store = useContext(ScopeContext).s;\n  const setAtom = useCallback(() => store[WRITE_ATOM](anAtom, RESET), [store, anAtom]);\n  return setAtom;\n}\n\nfunction useReducerAtom(anAtom, reducer, scope) {\n  const [state, setState] = useAtom(anAtom, scope);\n  const dispatch = useCallback((action) => {\n    setState((prev) => reducer(prev, action));\n  }, [setState, reducer]);\n  return [state, dispatch];\n}\n\nfunction atomWithReducer(initialValue, reducer) {\n  const anAtom = atom(initialValue, (get, set, action) => set(anAtom, reducer(get(anAtom), action)));\n  return anAtom;\n}\n\nfunction atomFamily(initializeAtom, areEqual) {\n  let shouldRemove = null;\n  const atoms = /* @__PURE__ */ new Map();\n  const createAtom = (param) => {\n    let item;\n    if (areEqual === void 0) {\n      item = atoms.get(param);\n    } else {\n      for (const [key, value] of atoms) {\n        if (areEqual(key, param)) {\n          item = value;\n          break;\n        }\n      }\n    }\n    if (item !== void 0) {\n      if (shouldRemove == null ? void 0 : shouldRemove(item[1], param)) {\n        atoms.delete(param);\n      } else {\n        return item[0];\n      }\n    }\n    const newAtom = initializeAtom(param);\n    atoms.set(param, [newAtom, Date.now()]);\n    return newAtom;\n  };\n  createAtom.remove = (param) => {\n    if (areEqual === void 0) {\n      atoms.delete(param);\n    } else {\n      for (const [key] of atoms) {\n        if (areEqual(key, param)) {\n          atoms.delete(key);\n          break;\n        }\n      }\n    }\n  };\n  createAtom.setShouldRemove = (fn) => {\n    shouldRemove = fn;\n    if (!shouldRemove)\n      return;\n    for (const [key, value] of atoms) {\n      if (shouldRemove(value[1], key)) {\n        atoms.delete(key);\n      }\n    }\n  };\n  return createAtom;\n}\n\nconst getWeakCacheItem = (cache, deps) => {\n  do {\n    const [dep, ...rest] = deps;\n    const entry = cache.get(dep);\n    if (!entry) {\n      return;\n    }\n    if (!rest.length) {\n      return entry[1];\n    }\n    cache = entry[0];\n    deps = rest;\n  } while (deps.length);\n};\nconst setWeakCacheItem = (cache, deps, item) => {\n  do {\n    const [dep, ...rest] = deps;\n    let entry = cache.get(dep);\n    if (!entry) {\n      entry = [ new WeakMap()];\n      cache.set(dep, entry);\n    }\n    if (!rest.length) {\n      entry[1] = item;\n      return;\n    }\n    cache = entry[0];\n    deps = rest;\n  } while (deps.length);\n};\nconst createMemoizeAtom = () => {\n  const cache = /* @__PURE__ */ new WeakMap();\n  const memoizeAtom = (createAtom, deps) => {\n    const cachedAtom = getWeakCacheItem(cache, deps);\n    if (cachedAtom) {\n      return cachedAtom;\n    }\n    const createdAtom = createAtom();\n    setWeakCacheItem(cache, deps, createdAtom);\n    return createdAtom;\n  };\n  return memoizeAtom;\n};\n\nconst memoizeAtom$4 = createMemoizeAtom();\nfunction selectAtom(anAtom, selector, equalityFn = Object.is) {\n  return memoizeAtom$4(() => {\n    const refAtom = atom(() => ({}));\n    const derivedAtom = atom((get) => {\n      const slice = selector(get(anAtom));\n      const ref = get(refAtom);\n      if (\"prev\" in ref && equalityFn(ref.prev, slice)) {\n        return ref.prev;\n      }\n      ref.prev = slice;\n      return slice;\n    });\n    return derivedAtom;\n  }, [anAtom, selector, equalityFn]);\n}\n\nfunction useAtomCallback(callback, scope) {\n  const anAtom = useMemo(() => atom(null, (get, set, [arg, resolve, reject]) => {\n    try {\n      resolve(callback(get, set, arg));\n    } catch (e) {\n      reject(e);\n    }\n  }), [callback]);\n  const invoke = useSetAtom(anAtom, scope);\n  return useCallback((arg) => new Promise((resolve, reject) => {\n    invoke([arg, resolve, reject]);\n  }), [invoke]);\n}\n\nconst memoizeAtom$3 = createMemoizeAtom();\nconst deepFreeze = (obj) => {\n  if (typeof obj !== \"object\" || obj === null)\n    return;\n  Object.freeze(obj);\n  const propNames = Object.getOwnPropertyNames(obj);\n  for (const name of propNames) {\n    const value = obj[name];\n    deepFreeze(value);\n  }\n  return obj;\n};\nfunction freezeAtom(anAtom) {\n  return memoizeAtom$3(() => {\n    const frozenAtom = atom((get) => deepFreeze(get(anAtom)), (_get, set, arg) => set(anAtom, arg));\n    return frozenAtom;\n  }, [anAtom]);\n}\nfunction freezeAtomCreator(createAtom) {\n  return (...params) => {\n    const anAtom = createAtom(...params);\n    const origRead = anAtom.read;\n    anAtom.read = (get) => deepFreeze(origRead(get));\n    return anAtom;\n  };\n}\n\nconst memoizeAtom$2 = createMemoizeAtom();\nconst isWritable = (atom2) => !!atom2.write;\nconst isFunction = (x) => typeof x === \"function\";\nfunction splitAtom(arrAtom, keyExtractor) {\n  return memoizeAtom$2(() => {\n    const mappingCache = /* @__PURE__ */ new WeakMap();\n    const getMapping = (arr, prev) => {\n      let mapping = mappingCache.get(arr);\n      if (mapping) {\n        return mapping;\n      }\n      const prevMapping = prev && mappingCache.get(prev);\n      const atomList = [];\n      const keyList = [];\n      arr.forEach((item, index) => {\n        const key = keyExtractor ? keyExtractor(item) : index;\n        keyList[index] = key;\n        const cachedAtom = prevMapping && prevMapping.atomList[prevMapping.keyList.indexOf(key)];\n        if (cachedAtom) {\n          atomList[index] = cachedAtom;\n          return;\n        }\n        const itemRefAtom = atom(() => ({}));\n        const read2 = (get) => {\n          const itemRef = get(itemRefAtom);\n          const ref = get(refAtom);\n          const arr2 = get(arrAtom);\n          const mapping2 = getMapping(arr2, ref.prev);\n          const index2 = mapping2.keyList.indexOf(key);\n          if (index2 < 0 || index2 >= arr2.length) {\n            if (\"prev\" in itemRef) {\n              return itemRef.prev;\n            }\n            throw new Error(\"splitAtom: index out of bounds for read\");\n          }\n          itemRef.prev = arr2[index2];\n          return arr2[index2];\n        };\n        const write2 = (get, set, update) => {\n          const ref = get(refAtom);\n          const arr2 = get(arrAtom);\n          const mapping2 = getMapping(arr2, ref.prev);\n          const index2 = mapping2.keyList.indexOf(key);\n          if (index2 < 0 || index2 >= arr2.length) {\n            throw new Error(\"splitAtom: index out of bounds for write\");\n          }\n          const nextItem = isFunction(update) ? update(arr2[index2]) : update;\n          set(arrAtom, [\n            ...arr2.slice(0, index2),\n            nextItem,\n            ...arr2.slice(index2 + 1)\n          ]);\n        };\n        atomList[index] = isWritable(arrAtom) ? atom(read2, write2) : atom(read2);\n      });\n      if (prevMapping && prevMapping.keyList.length === keyList.length && prevMapping.keyList.every((x, i) => x === keyList[i])) {\n        mapping = prevMapping;\n      } else {\n        mapping = { atomList, keyList };\n      }\n      mappingCache.set(arr, mapping);\n      return mapping;\n    };\n    const refAtom = atom(() => ({}));\n    const read = (get) => {\n      const ref = get(refAtom);\n      const arr = get(arrAtom);\n      const mapping = getMapping(arr, ref.prev);\n      ref.prev = arr;\n      return mapping.atomList;\n    };\n    const write = (get, set, atomToRemove) => {\n      const index = get(splittedAtom).indexOf(atomToRemove);\n      if (index >= 0) {\n        const arr = get(arrAtom);\n        set(arrAtom, [\n          ...arr.slice(0, index),\n          ...arr.slice(index + 1)\n        ]);\n      }\n    };\n    const splittedAtom = isWritable(arrAtom) ? atom(read, write) : atom(read);\n    return splittedAtom;\n  }, keyExtractor ? [arrAtom, keyExtractor] : [arrAtom]);\n}\n\nfunction atomWithDefault(getDefault) {\n  const EMPTY = Symbol();\n  const overwrittenAtom = atom(EMPTY);\n  const anAtom = atom((get) => {\n    const overwritten = get(overwrittenAtom);\n    if (overwritten !== EMPTY) {\n      return overwritten;\n    }\n    return getDefault(get);\n  }, (get, set, update) => {\n    if (update === RESET) {\n      return set(overwrittenAtom, EMPTY);\n    }\n    return set(overwrittenAtom, typeof update === \"function\" ? update(get(anAtom)) : update);\n  });\n  return anAtom;\n}\n\nvar __defProp$1 = Object.defineProperty;\nvar __defProps$1 = Object.defineProperties;\nvar __getOwnPropDescs$1 = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols$1 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$1 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$1 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$1 = (obj, key, value) => key in obj ? __defProp$1(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$1 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$1.call(b, prop))\n      __defNormalProp$1(a, prop, b[prop]);\n  if (__getOwnPropSymbols$1)\n    for (var prop of __getOwnPropSymbols$1(b)) {\n      if (__propIsEnum$1.call(b, prop))\n        __defNormalProp$1(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps$1 = (a, b) => __defProps$1(a, __getOwnPropDescs$1(b));\nconst memoizeAtom$1 = createMemoizeAtom();\nfunction waitForAll(atoms) {\n  const createAtom = () => {\n    const unwrappedAtoms = unwrapAtoms(atoms);\n    const derivedAtom = atom((get) => {\n      const promises = [];\n      const values = unwrappedAtoms.map((anAtom, index) => {\n        try {\n          return get(anAtom);\n        } catch (e) {\n          if (e instanceof Promise) {\n            promises[index] = e;\n          } else {\n            throw e;\n          }\n        }\n      });\n      if (promises.length) {\n        throw Promise.all(promises);\n      }\n      return wrapResults(atoms, values);\n    });\n    return derivedAtom;\n  };\n  if (Array.isArray(atoms)) {\n    return memoizeAtom$1(createAtom, atoms);\n  }\n  return createAtom();\n}\nconst unwrapAtoms = (atoms) => Array.isArray(atoms) ? atoms : Object.getOwnPropertyNames(atoms).map((key) => atoms[key]);\nconst wrapResults = (atoms, results) => Array.isArray(atoms) ? results : Object.getOwnPropertyNames(atoms).reduce((out, key, idx) => __spreadProps$1(__spreadValues$1({}, out), { [key]: results[idx] }), {});\n\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nfunction createJSONStorage(getStringStorage) {\n  return {\n    getItem: (key) => {\n      const value = getStringStorage().getItem(key);\n      if (value instanceof Promise) {\n        return value.then((v) => JSON.parse(v || \"\"));\n      }\n      return JSON.parse(value || \"\");\n    },\n    setItem: (key, newValue) => getStringStorage().setItem(key, JSON.stringify(newValue)),\n    removeItem: (key) => getStringStorage().removeItem(key)\n  };\n}\nconst defaultStorage = createJSONStorage(() => localStorage);\ndefaultStorage.subscribe = (key, callback) => {\n  const storageEventCallback = (e) => {\n    if (e.key === key && e.newValue) {\n      callback(JSON.parse(e.newValue));\n    }\n  };\n  window.addEventListener(\"storage\", storageEventCallback);\n  return () => {\n    window.removeEventListener(\"storage\", storageEventCallback);\n  };\n};\nfunction atomWithStorage(key, initialValue, storage = defaultStorage) {\n  const getInitialValue = () => {\n    try {\n      const value = storage.getItem(key);\n      if (value instanceof Promise) {\n        return value.catch(() => initialValue);\n      }\n      return value;\n    } catch {\n      return initialValue;\n    }\n  };\n  const baseAtom = atom(storage.delayInit ? initialValue : getInitialValue());\n  baseAtom.onMount = (setAtom) => {\n    let unsub;\n    if (storage.subscribe) {\n      unsub = storage.subscribe(key, setAtom);\n    }\n    if (storage.delayInit) {\n      const value = getInitialValue();\n      if (value instanceof Promise) {\n        value.then(setAtom);\n      } else {\n        setAtom(value);\n      }\n    }\n    return unsub;\n  };\n  const anAtom = atom((get) => get(baseAtom), (get, set, update) => {\n    if (update === RESET) {\n      set(baseAtom, initialValue);\n      return storage.removeItem(key);\n    }\n    const newValue = typeof update === \"function\" ? update(get(baseAtom)) : update;\n    set(baseAtom, newValue);\n    return storage.setItem(key, newValue);\n  });\n  return anAtom;\n}\nfunction atomWithHash(key, initialValue, options) {\n  const serialize = (options == null ? void 0 : options.serialize) || JSON.stringify;\n  const deserialize = (options == null ? void 0 : options.deserialize) || JSON.parse;\n  const subscribe = (options == null ? void 0 : options.subscribe) || ((callback) => {\n    window.addEventListener(\"hashchange\", callback);\n    return () => {\n      window.removeEventListener(\"hashchange\", callback);\n    };\n  });\n  const hashStorage = __spreadProps(__spreadValues({\n    getItem: (key2) => {\n      const searchParams = new URLSearchParams(location.hash.slice(1));\n      const storedValue = searchParams.get(key2);\n      if (storedValue === null) {\n        throw new Error(\"no value stored\");\n      }\n      return deserialize(storedValue);\n    },\n    setItem: (key2, newValue) => {\n      const searchParams = new URLSearchParams(location.hash.slice(1));\n      searchParams.set(key2, serialize(newValue));\n      if (options == null ? void 0 : options.replaceState) {\n        history.replaceState(null, \"\", \"#\" + searchParams.toString());\n      } else {\n        location.hash = searchParams.toString();\n      }\n    },\n    removeItem: (key2) => {\n      const searchParams = new URLSearchParams(location.hash.slice(1));\n      searchParams.delete(key2);\n      if (options == null ? void 0 : options.replaceState) {\n        history.replaceState(null, \"\", \"#\" + searchParams.toString());\n      } else {\n        location.hash = searchParams.toString();\n      }\n    }\n  }, (options == null ? void 0 : options.delayInit) && { delayInit: true }), {\n    subscribe: (key2, setValue) => {\n      const callback = () => {\n        const searchParams = new URLSearchParams(location.hash.slice(1));\n        const str = searchParams.get(key2);\n        if (str !== null) {\n          setValue(deserialize(str));\n        } else {\n          setValue(initialValue);\n        }\n      };\n      return subscribe(callback);\n    }\n  });\n  return atomWithStorage(key, initialValue, hashStorage);\n}\n\nfunction atomWithObservable(createObservable) {\n  const observableResultAtom = atom((get) => {\n    var _a;\n    let settlePromise = null;\n    let observable = createObservable(get);\n    const itself = (_a = observable[Symbol.observable]) == null ? void 0 : _a.call(observable);\n    if (itself) {\n      observable = itself;\n    }\n    const dataAtom = atom(new Promise((resolve, reject) => {\n      settlePromise = (data, err) => {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(data);\n        }\n      };\n    }));\n    let setData = () => {\n      throw new Error(\"setting data without mount\");\n    };\n    const dataListener = (data) => {\n      if (settlePromise) {\n        settlePromise(data);\n        settlePromise = null;\n        if (subscription && !setData) {\n          subscription.unsubscribe();\n          subscription = null;\n        }\n      } else {\n        setData(data);\n      }\n    };\n    const errorListener = (error) => {\n      if (settlePromise) {\n        settlePromise(null, error);\n        settlePromise = null;\n        if (subscription && !setData) {\n          subscription.unsubscribe();\n          subscription = null;\n        }\n      } else {\n        setData(Promise.reject(error));\n      }\n    };\n    let subscription = null;\n    subscription = observable.subscribe(dataListener, errorListener);\n    if (!settlePromise) {\n      subscription.unsubscribe();\n      subscription = null;\n    }\n    dataAtom.onMount = (update) => {\n      setData = update;\n      if (!subscription) {\n        subscription = observable.subscribe(dataListener, errorListener);\n      }\n      return () => {\n        subscription == null ? void 0 : subscription.unsubscribe();\n        subscription = null;\n      };\n    };\n    return { dataAtom, observable };\n  });\n  const observableAtom = atom((get) => {\n    const { dataAtom } = get(observableResultAtom);\n    return get(dataAtom);\n  }, (get, _set, data) => {\n    const { observable } = get(observableResultAtom);\n    if (\"next\" in observable) {\n      observable.next(data);\n    } else {\n      throw new Error(\"observable is not subject\");\n    }\n  });\n  return observableAtom;\n}\n\nconst hydratedMap = /* @__PURE__ */ new WeakMap();\nfunction useHydrateAtoms(values, scope) {\n  const ScopeContext = SECRET_INTERNAL_getScopeContext(scope);\n  const scopeContainer = useContext(ScopeContext);\n  const store = scopeContainer.s;\n  const hydratedSet = getHydratedSet(scopeContainer);\n  const tuplesToRestore = [];\n  for (const tuple of values) {\n    const atom = tuple[0];\n    if (!hydratedSet.has(atom)) {\n      hydratedSet.add(atom);\n      tuplesToRestore.push(tuple);\n    }\n  }\n  if (tuplesToRestore.length) {\n    store[RESTORE_ATOMS](tuplesToRestore);\n  }\n}\nfunction getHydratedSet(scopeContainer) {\n  let hydratedSet = hydratedMap.get(scopeContainer);\n  if (!hydratedSet) {\n    hydratedSet = /* @__PURE__ */ new WeakSet();\n    hydratedMap.set(scopeContainer, hydratedSet);\n  }\n  return hydratedSet;\n}\n\nconst memoizeAtom = createMemoizeAtom();\nconst LOADING = { state: \"loading\" };\nfunction loadable(anAtom) {\n  return memoizeAtom(() => {\n    const loadableAtomCache = /* @__PURE__ */ new WeakMap();\n    const catchAtom = atom((get) => {\n      let promise;\n      try {\n        const data = get(anAtom);\n        const loadableAtom2 = atom({ state: \"hasData\", data });\n        return loadableAtom2;\n      } catch (error) {\n        if (error instanceof Promise) {\n          promise = error;\n        } else {\n          const loadableAtom2 = atom({\n            state: \"hasError\",\n            error\n          });\n          return loadableAtom2;\n        }\n      }\n      const cached = loadableAtomCache.get(promise);\n      if (cached) {\n        return cached;\n      }\n      const loadableAtom = atom(LOADING, async (get2, set) => {\n        try {\n          const data = await get2(anAtom, { unstable_promise: true });\n          set(loadableAtom, { state: \"hasData\", data });\n        } catch (error) {\n          set(loadableAtom, { state: \"hasError\", error });\n        }\n      });\n      loadableAtom.onMount = (init) => {\n        init();\n      };\n      loadableAtomCache.set(promise, loadableAtom);\n      return loadableAtom;\n    });\n    const derivedAtom = atom((get) => {\n      const loadableAtom = get(catchAtom);\n      return get(loadableAtom);\n    });\n    return derivedAtom;\n  }, [anAtom]);\n}\n\nexport { RESET, atomFamily, atomWithDefault, atomWithHash, atomWithObservable, atomWithReducer, atomWithReset, atomWithStorage, createJSONStorage, freezeAtom, freezeAtomCreator, loadable, selectAtom, splitAtom, useAtomCallback, useHydrateAtoms, useReducerAtom, useResetAtom, waitForAll };\n"],
  "mappings": "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",
  "names": []
}
