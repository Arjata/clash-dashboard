import { TableInstance, OnChangeFn, Updater, Column, PartialGenerics } from '../types';
export declare type ColumnOrderState = string[];
export declare type ColumnOrderTableState = {
    columnOrder: ColumnOrderState;
};
export declare type ColumnOrderOptions = {
    onColumnOrderChange?: OnChangeFn<ColumnOrderState>;
};
export declare type ColumnOrderDefaultOptions = {
    onColumnOrderChange: OnChangeFn<ColumnOrderState>;
};
export declare type ColumnOrderInstance<TGenerics extends PartialGenerics> = {
    setColumnOrder: (updater: Updater<ColumnOrderState>) => void;
    resetColumnOrder: () => void;
    getOrderColumnsFn: () => (columns: Column<TGenerics>[]) => Column<TGenerics>[];
};
export declare const Ordering: {
    getInitialState: () => ColumnOrderTableState;
    getDefaultOptions: <TGenerics extends Partial<import("../types").DefaultGenerics>>(instance: TableInstance<TGenerics>) => ColumnOrderDefaultOptions;
    getInstance: <TGenerics_1 extends Partial<import("../types").DefaultGenerics>>(instance: TableInstance<TGenerics_1>) => ColumnOrderInstance<TGenerics_1>;
};
