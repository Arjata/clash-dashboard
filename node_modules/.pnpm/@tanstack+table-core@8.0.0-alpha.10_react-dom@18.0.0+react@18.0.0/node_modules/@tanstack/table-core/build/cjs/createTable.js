/**
 * table-core
 *
 * Copyright (c) TanStack
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _rollupPluginBabelHelpers = require('./_virtual/_rollupPluginBabelHelpers.js');

function createTableFactory(opts) {
  return function () {
    return _createTable(undefined, undefined, opts);
  };
}
function createTable() {
  return _createTable();
}

function _createTable(_, __, __options) {
  return {
    __options: __options || {},
    createColumns: function createColumns(columns) {
      return columns;
    },
    createDisplayColumn: function createDisplayColumn(column) {
      return column;
    },
    createGroup: function createGroup(column) {
      return column;
    },
    createDataColumn: function createDataColumn(accessor, column) {
      column = _rollupPluginBabelHelpers["extends"]({}, column, {
        id: column.id
      });

      if (typeof accessor === 'string') {
        var _column$id;

        return _rollupPluginBabelHelpers["extends"]({}, column, {
          id: (_column$id = column.id) != null ? _column$id : accessor,
          accessorKey: accessor
        });
      }

      if (typeof accessor === 'function') {
        return _rollupPluginBabelHelpers["extends"]({}, column, {
          accessorFn: accessor
        });
      }

      throw new Error('Invalid accessor');
    }
  };
}

exports.createTable = createTable;
exports.createTableFactory = createTableFactory;
//# sourceMappingURL=createTable.js.map
